{"version":3,"sources":["components/navigation/Nav.module.scss","components/Footer.js","components/navigation/Nav.js","components/Header.js","pages/HomePage.js","pages/ThesisPage.js","pages/ResumePage.js","pages/PhotographyPage.js","pages/DesignPage.js","pages/DevelopmentPage.js","pages/PlaylistPage.js","pages/NotFoundPage.js","pages/AboutPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","className","href","target","rel","Nav","navbar","exact","to","Header","Homepage","ThesisPage","ResumePage","PhotographyPage","DesignPage","DevelopmentPage","PlaylistPage","NotFoundPage","AboutPage","App","path","component","HomePage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gHACAA,EAAOC,QAAU,CAAC,OAAS,oBAAoB,QAAU,uB,gLCiB1CC,EAhBA,WACb,OACE,gCACE,yBAAKC,UAAU,WACb,mDACA,4BACE,4BAAI,uBAAGC,KAAK,qCAAqCC,OAAO,SAASC,IAAI,uBAAjE,YACJ,4BAAI,uBAAGF,KAAK,0CAA0CC,OAAO,SAASC,IAAI,uBAAtE,WACJ,4BAAI,uBAAGF,KAAK,iDAAiDC,OAAO,SAASC,IAAI,uBAA7E,aACJ,4BAAI,uBAAGF,KAAK,kDAAkDC,OAAO,SAASC,IAAI,uBAA9E,kB,QCaCC,EAnBH,WACV,OACE,yBAAKJ,UAAWK,UACd,6BACE,uBAAGL,UAAU,WAAU,kBAAC,IAAD,CAASM,OAAK,EAACC,GAAG,wBAAwBP,UAAU,WAApD,iBAEzB,4BACE,4BAAI,kBAAC,IAAD,CAASO,GAAG,+BAAZ,UACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,gCAAZ,WACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,gCAAZ,WACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,qCAAZ,gBACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,gCAAZ,WACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,qCAAZ,gBACJ,4BAAI,kBAAC,IAAD,CAASA,GAAG,kCAAZ,gBCPGC,EARA,WACb,OACE,gCACE,kBAAC,EAAD,QCISC,MARf,WACE,OACE,iCACE,6CCKSC,MARf,WACE,OACE,iCACE,+CCKSC,MARf,WACE,OACE,iCACE,+CCKSC,MARf,WACE,OACE,iCACE,oDCKSC,MARf,WACE,OACE,iCACE,+CCKSC,MARf,WACE,OACE,iCACE,mDCKSC,MARf,WACE,OACE,iCACE,iDCKSC,MARf,WACE,OACE,iCACE,6CCKSC,MARf,WACE,OACE,iCACE,8C,MCqCSC,MAxBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAKlB,UAAU,OACb,kBAAC,EAAD,MACA,8BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOM,OAAK,EAACa,KAAK,wBAAwBC,UAAWC,IACrD,kBAAC,IAAD,CAAOF,KAAK,+BAA+BC,UAAWV,IACtD,kBAAC,IAAD,CAAOS,KAAK,+BAA+BC,UAAWT,IACtD,kBAAC,IAAD,CAAOQ,KAAK,oCAAoCC,UAAWR,IAC3D,kBAAC,IAAD,CAAOO,KAAK,+BAA+BC,UAAWP,IACtD,kBAAC,IAAD,CAAOM,KAAK,oCAAoCC,UAAWN,IAC3D,kBAAC,IAAD,CAAOK,KAAK,iCAAiCC,UAAWL,IACxD,kBAAC,IAAD,CAAOI,KAAK,8BAA8BC,UAAWH,IACrD,kBAAC,IAAD,CAAOG,UAAWJ,MAGtB,kBAAC,EAAD,SCxBYM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.020b2bb8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Nav_navbar__1Oy74\",\"navlink\":\"Nav_navlink__ireyr\"};","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer>\n      <div className='content'>\n        <p>aaron middleton 2020</p>\n        <ul>\n          <li><a href=\"https://twitter.com/mddtwnprspctvs\" target=\"_blank\" rel=\"noopener noreferrer\">twitter</a></li>\n          <li><a href=\"https://github.com/middtownperspectives\" target=\"_blank\" rel=\"noopener noreferrer\">github</a></li>\n          <li><a href=\"https://www.facebook.com/middtown.perspectives\" target=\"_blank\" rel=\"noopener noreferrer\">facebook</a></li>\n          <li><a href=\"https://www.instagram.com/middtownperspectives/\" target=\"_blank\" rel=\"noopener noreferrer\">instagram</a></li>\n        </ul>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { navbar } from './Nav.module.scss';\n\nconst Nav = () => {\n  return (\n    <nav className={navbar}>\n      <div>\n        <p className='navlink'><NavLink exact to=\"/middtownperspectives\" className='navlink'>Logo (Home)</NavLink></p>\n      </div>\n      <ul>\n        <li><NavLink to=\"/middtownperspectives/about\">about</NavLink></li>\n        <li><NavLink to=\"/middtownperspectives/thesis\">thesis</NavLink></li>\n        <li><NavLink to=\"/middtownperspectives/resume\">resume</NavLink></li>\n        <li><NavLink to=\"/middtownperspectives/photography\">photography</NavLink></li>\n        <li><NavLink to=\"/middtownperspectives/design\">design</NavLink></li>\n        <li><NavLink to=\"/middtownperspectives/development\">development</NavLink></li>\n        <li><NavLink to=\"/middtownperspectives/playlist\">playlist</NavLink></li>\n      </ul>  \n    </ nav>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\nimport Nav from './navigation/Nav';\n\nconst Header = () => {\n  return (\n    <header>\n      <Nav />\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nfunction Homepage() {\n  return (\n    <section>\n      <h1> home page </h1>\n    </section>\n  );\n}\n\nexport default Homepage;\n","import React from \"react\";\n\nfunction ThesisPage() {\n  return (\n    <section>\n      <h1> Thesis Page </h1>\n    </section>\n  );\n}\n\nexport default ThesisPage;\n","import React from \"react\";\n\nfunction ResumePage() {\n  return (\n    <section>\n      <h1> Resume Page </h1>\n    </section>\n  );\n}\n\nexport default ResumePage;\n","import React from \"react\";\n\nfunction PhotographyPage() {\n  return (\n    <section>\n      <h1> Photography Page </h1>\n    </section>\n  );\n}\n\nexport default PhotographyPage;\n","import React from \"react\";\n\nfunction DesignPage() {\n  return (\n    <section>\n      <h1> Design Page </h1>\n    </section>\n  );\n}\n\nexport default DesignPage;\n","import React from \"react\";\n\nfunction DevelopmentPage() {\n  return (\n    <section>\n      <h1> DevelopmentPage </h1>\n    </section>\n  );\n}\n\nexport default DevelopmentPage;\n","import React from \"react\";\n\nfunction PlaylistPage() {\n  return (\n    <section>\n      <h1> Playlist Page </h1>\n    </section>\n  );\n}\n\nexport default PlaylistPage;\n","import React from \"react\";\n\nfunction NotFoundPage() {\n  return (\n    <section>\n      <h1> Not Found </h1>\n    </section>\n  );\n}\n\nexport default NotFoundPage;\n","import React from \"react\";\n\nfunction AboutPage() {\n  return (\n    <section>\n      <h1> About Page </h1>\n    </section>\n  );\n}\n\nexport default AboutPage;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport Footer from './components/Footer';\nimport Header from './components/Header';\n\nimport HomePage from './pages/HomePage';\nimport ThesisPage from './pages/ThesisPage';\nimport ResumePage from './pages/ResumePage';\nimport PhotographyPage from './pages/PhotographyPage';\nimport DesignPage from './pages/DesignPage';\nimport DevelopmentPage from './pages/DevelopmentPage';\nimport PlaylistPage from './pages/PlaylistPage';\nimport NotFoundPage from './pages/NotFoundPage';\nimport AboutPage from './pages/AboutPage';\n\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header />\n        <main>\n          <Switch>\n            <Route exact path=\"/middtownperspectives\" component={HomePage} />\n            <Route path=\"/middtownperspectives/thesis\" component={ThesisPage} />\n            <Route path=\"/middtownperspectives/resume\" component={ResumePage} /> \n            <Route path=\"/middtownperspectives/photography\" component={PhotographyPage} /> \n            <Route path=\"/middtownperspectives/design\" component={DesignPage} /> \n            <Route path=\"/middtownperspectives/development\" component={DevelopmentPage} /> \n            <Route path=\"/middtownperspectives/playlist\" component={PlaylistPage} /> \n            <Route path=\"/middtownperspectives/about\" component={AboutPage} /> \n            <Route component={NotFoundPage} />\n          </Switch>\n        </main> \n        <Footer />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}